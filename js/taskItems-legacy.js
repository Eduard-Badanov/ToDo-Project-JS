System.register(["./index-legacy.js","./showCompletedTasks-legacy.js"],(function(t,e){"use strict";var s,a,c,n,i,o;return{setters:[t=>{s=t.t,a=t.u,c=t.d,n=t.a,i=t.w},t=>{o=t.showCompletedTasks}],execute:function(){document.querySelector(".add-task__button").addEventListener("click",(()=>{if(""!==document.querySelector(".tasks__add-task > input").value.trim()&&"###DELETE ALL PARAMETERS###"!==document.querySelector(".tasks__add-task > input").value){const t=document.querySelector(".scenarios__items-list > button.item-active").classList[1];let e=null;const s=document.querySelector(".tasks__add-task > input").value.trim(),o=function(){let t=new Date,e=t.getFullYear(),s=t.getMonth()+1,a=t.getDate(),c=t.getHours(),n=t.getMinutes();return n=n<10?`0${n}`:`${n}`,a=a<10?`0${a}`:`${a}`,s=s<10?`0${s}`:`${s}`,`${c}:${n} ${a}.${s}.${e}`}(),l="item-favorites"===t;a.forEach(((c,n)=>{c.DOMname===t&&(e=c.tasks.length+1,a[n].tasks.push({id:e,text:s,data:o,isImportant:l}))})),c(t,e,s,o,l),n(),i(),document.querySelector(`.${t}-${e} > div > div > span`).clientWidth>=document.querySelector(`.${t}-${e} > div > div`).clientWidth&&document.querySelector(`.${t}-${e}`).classList.add("animated"),document.querySelector(".tasks__add-task > input").value=""}else"###DELETE ALL PARAMETERS###"===document.querySelector(".tasks__add-task > input").value&&(localStorage.removeItem("todo-user-js"),document.querySelector(".tasks__add-task > input").value="")})),document.querySelector(".tasks__add-task > input").addEventListener("keydown",(t=>{"Enter"===t.key&&document.querySelector(".add-task__button").click()})),document.querySelector(".tasks__tasks-list").addEventListener("click",(t=>{if(t.target.classList.contains("button-delete__image")||t.target.classList.contains("task-right__button-delete")){const e=t.target.closest(".tasks-list__task").classList[1].slice(0,-2),s=Number(t.target.closest(".tasks-list__task").classList[1].at(-1));document.querySelector(`.${e}-${s} > div > div > span`).innerHTML,a.forEach(((a,c)=>{if(a.DOMname===e){let e=null;a.tasks.forEach((t=>{t.id===s&&(e=a.tasks.indexOf(t))})),delete a.tasks[e],t.target.closest(".tasks-list__task").remove()}})),n()}})),document.querySelector(".tasks__tasks-list").addEventListener("click",(t=>{if(t.target.classList.contains("button-circle__image")||t.target.classList.contains("task-left__button-circle")){const e=t.target.closest(".tasks-list__task").classList[1].slice(0,-2),c=Number(t.target.closest(".tasks-list__task").classList[1].at(-1)),i=document.querySelector(`.${e}-${c} > div > div > span:nth-child(1)`).innerHTML,l=document.querySelector(`.${e}-${c} > div:nth-child(2) > span`).innerHTML;document.querySelector(`.${e}-${c} > div > button > img`).attributes.src.nodeValue=s.circleActive,document.querySelector(`.${e}-${c} > div > div > span`).style.textDecoration="line-through",setTimeout((()=>document.querySelector(`.${e}-${c} > div > button > img`).attributes.src.nodeValue=s.circle),300),setTimeout((()=>document.querySelector(`.${e}-${c} > div > div > span`).style.textDecoration="none"),300),setTimeout((()=>{a.forEach((a=>{if(a.DOMname===e){!function(t,e,a,c){const n=document.createElement("div");n.classList.add("completed-tasks-list__task",`${t}-${e}`),n.innerHTML=`\n\t<div class="completed-task__body">\n\t\t<span class="completed-task__text">${a}</span>\n\t\t<span style="display: none" class="completed-task__data">${c}</span>\n\t</div>\n\t<button class="completed-task__button-delete">\n\t\t<img class="button-delete__image" src="${s.delete}">\n\t</button>`,document.querySelector(".tasks__completed-tasks-list").appendChild(n)}(e,c,i,l),o(),document.querySelector(`.completed-tasks-list__task.${e}-${c} > div > span`).clientWidth>=document.querySelector(`.completed-tasks-list__task.${e}-${c} > div`).clientWidth&&document.querySelector(`.completed-tasks-list__task.${e}-${c}`).classList.add("animated");let n=null;a.tasks.forEach((t=>{t.id===c&&(n=a.tasks.indexOf(t))})),delete a.tasks[n],t.target.closest(".tasks-list__task").remove()}})),n()}),500)}})),document.querySelector(".tasks__tasks-list").addEventListener("click",(t=>{if(t.target.classList.contains("button-important__image")||t.target.classList.contains("task-right__button-important")){const e=t.target.closest(".tasks-list__task").classList[1].slice(0,-2),c=Number(t.target.closest(".tasks-list__task").classList[1].at(-1));document.querySelector(`.${e}-${c} > div:nth-child(2) > button > img`).attributes.src.nodeValue===s.star?(document.querySelector(`.${e}-${c} > div:nth-child(2) > button > img`).attributes.src.nodeValue=s.starActive,a.forEach((t=>{t.DOMname===e&&t.tasks.forEach((t=>{t.id===c&&(t.isImportant=!0,i())}))})),n()):(document.querySelector(`.${e}-${c} > div:nth-child(2) > button > img`).attributes.src.nodeValue=s.star,a.forEach((t=>{t.DOMname===e&&t.tasks.forEach((t=>{t.id===c&&(t.isImportant=!1,i())}))})),n())}})),document.querySelector(".tasks__completed-tasks-list").addEventListener("click",(t=>{if(t.target.closest(".completed-task__button-delete")){const e=t.target.closest(".completed-tasks-list__task").classList[1].slice(0,-2),s=Number(t.target.closest(".completed-tasks-list__task").classList[1].at(-1)),l=document.querySelector(`.${e}-${s} > div > span:nth-child(1)`).innerHTML,r=document.querySelector(`.${e}-${s} > div > span:nth-child(2)`).innerHTML;c(e,s,l,r),i(),t.target.closest(".completed-tasks-list__task").remove(),o(),a.forEach((t=>{t.DOMname===e&&t.tasks.push({id:s,text:l,data:r,isImportant:!1})})),n()}}))}}}));
